import java.util.Scanner;

public class Main {

    static Scanner scanner = new Scanner(System.in);

    static String setGender() {
        System.out.println("Select gender of student");
        System.out.println("[1] - Male");
        System.out.println("[2] - Female");
        int choice = scanner.nextInt();
        String gender = "";
        switch (choice) {
            case 1:
                gender = "Male";
                break;
            case 2:
                gender = "Female";
                break;
            default:
                System.out.println("Please choose between 1 and 2");
        }
        return gender;
    }

    static String setYearLevel() {
        String yearLevel = "";
        int choice;
        System.out.println("[1] - 1st year");
        System.out.println("[2] - 2nd year");
        System.out.println("[3] - 3rd year");
        System.out.println("[4] - 4th year");
        choice = scanner.nextInt();
        switch (choice) {
            case 1:
                yearLevel = "1st Year";
                break;
            case 2:
                yearLevel = "2nd Year";
                break;
            case 3:
                yearLevel = "3rd Year";
                break;
            case 4:
                yearLevel = "4th Year";
                break;
            default:
                System.out.println("Please choose between 1 to 4");
        }
        return yearLevel;
    }

    static String setCourse() {
        System.out.println("Select course of student");
        System.out.println("[1] - BSIT");
        System.out.println("[2] - BSHM");
        System.out.println("[3] - BSBA");
        System.out.println("[4] - BSED");
        int choice1 = scanner.nextInt();
        String course = "";
        switch (choice1) {
            case 1:
                course = "BSIT";
                break;
            case 2:
                course = "BSHM";
                break;
            case 3:
                course = "BSBA";
                break;
            case 4:
                course = "BSED";
                break;
            default:
                System.out.println("Please choose between 1 to 4");
        }
        return course;
    }

    static Student addStudent() {
        System.out.println("Enter Id No of Student:");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consume newline character
        System.out.println("Enter student name:");
        String name = scanner.nextLine();
        System.out.println("Enter student age:");
        int age = scanner.nextInt();
        scanner.nextLine(); // Consume newline character
        String gender = setGender();
        String yearLevel = setYearLevel();
        String course = setCourse();
        return new Student(id, name, age, gender, yearLevel, course);
    }

    static void editStudent(Student student) {
        System.out.println("Editing student information for ID No. " + student.id);
        System.out.println("Enter new student name:");
        scanner.nextLine(); // consume the newline character
        student.name = scanner.nextLine();
        System.out.println("Enter new student age:");
        student.age = scanner.nextInt();
        scanner.nextLine(); // consume the newline character
        student.gender = setGender();
        student.yearLevel = setYearLevel();
        student.course = setCourse();
        System.out.println("Student information updated successfully!");
    }

    public static void main(String[] args) {
        System.out.println("Enter No. of Student:");
        int numberOfStudents = scanner.nextInt();
        StudentModel studentModel = new StudentModel(numberOfStudents);
        int option;
        do {
            System.out.println("Select Option \n"
                    + "[1] - ADD\n"
                    + "[2] - EDIT\n"
                    + "[3] - DELETE\n"
                    + "[4] - DISPLAY\n"
                    + "[5] - EXIT");
            option = scanner.nextInt();
            switch (option) {
                case 1:
                    Student student = addStudent();
                    studentModel.addMember(student);
                    break;
                case 2:
                    System.out.println("Enter ID of student to edit:");
                    int idToEdit = scanner.nextInt();
                    Student studentToEdit = studentModel.findStudentById(idToEdit);
                    if (studentToEdit != null) {
                        editStudent(studentToEdit);
                    } else {
                        System.out.println("Student with ID " + idToEdit + " not found!");
                    }
                    break;
                case 3:
                    System.out.println("Enter ID of student to delete:");
                    int idToDelete = scanner.nextInt();
                    studentModel.deleteMember(idToDelete);
                    break;
                case 4:
                    studentModel.display();
                    break;
            }
        } while (option != 5);
        System.out.println("No. of Student is " + studentModel.getLength());
    }
}

class Student {
    int id;
    String name;
    int age;
    String gender;
    String yearLevel;
    String course;

    public Student(int id, String name, int age, String gender, String yearLevel, String course) {
        this.id = id;
        this.name = name;
        this.age = age;
        this.gender = gender;
        this.yearLevel = yearLevel;
        this.course = course;
    }
}

class StudentModel {

    private final Student[] studentList;
    private int currentIndex = 0;

    public StudentModel(int length) {
        this.studentList = new Student[length];
    }

    public void addMember(Student student) {
        if (currentIndex < studentList.length) {
            this.studentList[currentIndex++] = student;
            System.out.println("Student added successfully!");
        } else {
            System.out.println("Student list is full!");
        }
    }

    public void display() {
        for (Student student : studentList) {
            if (student != null) {
                System.out.println("ID No." + student.id + "\n"
                        + "Name: " + student.name + "\n"
                        + "Age: " + student.age + "\n"
                        + "Gender: " + student.gender + "\n"
                        + "Year Level: " + student.yearLevel + "\n"
                        + "Course: " + student.course + "\n\n");
            }
        }
    }

    public int getLength() {
        return studentList.length;
    }

    public void deleteMember(int idToDelete) {
        for (int i = 0; i < studentList.length; i++) {
            if (studentList[i] != null && studentList[i].id == idToDelete) {
                studentList[i] = null;
                System.out.println("Student with ID " + idToDelete + " deleted successfully!");
                return;
            }
        }
        System.out.println("Student with ID " + idToDelete + " not found!");
    }

    public Student findStudentById(int id) {
        for (Student student : studentList) {
            if (student != null && student.id == id) {
                return student;
            }
        }
        return null;
    }
}
